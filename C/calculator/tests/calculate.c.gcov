        -:    0:Source:calculate.c
        -:    0:Graph:calculate.gcno
        -:    0:Data:calculate.gcda
        -:    0:Runs:16
        -:    1://by Denis Kozub
        -:    2://
        -:    3:
        -:    4:#include <stdlib.h>
        -:    5:#include "stdio.h"
        -:    6:#include "polis.h"
        -:    7:#include "recursive_descent.h"
        -:    8:
        -:    9:#define SAFE(call) do { \
        -:   10:                       res = call; \
        -:   11:                       if (res) { \
        -:   12:                           goto FINISH; \
        -:   13:                       } \
        -:   14:                   } while(0)
        -:   15:
        -:   16:int
function main called 16 returned 100% blocks executed 95%
       16:   17:main(void)
        -:   18:{
        -:   19:    int res;
        -:   20:    
        -:   21:    Vars table;
       16:   22:    Polis polis = {NULL, 0};
        -:   23:    
      16*:   24:    SAFE(init_var_table(&table));
call    0 returned 16
branch  1 taken 0 (fallthrough)
branch  2 taken 16
       16:   25:    printf("Enter variables ('stop' to finish): \n");
call    0 returned 16
       16:   26:    SAFE(input_var_table(&table));
call    0 returned 16
branch  1 taken 7 (fallthrough)
branch  2 taken 9
        -:   27:    
        9:   28:    printf("Enter expression: \n");
call    0 returned 9
        9:   29:    SAFE(descent_polis(&polis));
call    0 returned 9
branch  1 taken 6 (fallthrough)
branch  2 taken 3
        -:   30:    
        -:   31:    int *resp;
        -:   32:    size_t size_res;
        3:   33:    SAFE(calculate_polis(&polis, (void**)&resp, &size_res, &table));
call    0 returned 3
branch  1 taken 2 (fallthrough)
branch  2 taken 1
        1:   34:    printf("Answer is: %d\n", *resp);
call    0 returned 1
        1:   35:    free(resp);
        -:   36:    
       16:   37:FINISH:
       16:   38:    free_polis(&polis);
call    0 returned 16
       16:   39:    free_var_table(&table);
call    0 returned 16
       16:   40:    return 0;
        -:   41:}
